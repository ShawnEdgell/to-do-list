* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
  }

html {
    background-color: orange;
}
  
  
body {
    display: flex;
    width: 100vw;
    height: 100vh;
    align-items: center;
    justify-content: center;
    font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;

}

.input {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 10px;
}

.container {
    max-width: 60rem;
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
    flex: 1;
    height:100vh;
    background-color: orange;
}

.box {
    border-radius: 10px;
    display: flex;
    flex-direction: column-reverse;
    background-color: white;
    width: 90%;
    min-height: 20%;    /* Minimum height */
    max-height: 80%;    /* Maximum height the box can grow to */
    padding: 20px 10px;
}

input[type="text"] {
    width: 70%;
    padding: 10px;
    margin: 10px 0;
    border: 1px solid #ccc;
    border-radius: 5px;
    font-size: 1.4rem;
}

button {
    padding: 10px 15px;
    border-radius: 5px;
    background-color: #333;
    color: white;
    border: none;
    cursor: pointer;
    font-size: 1.4rem;
}

button:hover {
    background-color: #666;;
}

ul {
    max-height: 90%;
    overflow-y: auto;
    width: 100%; /* Ensures that ul occupies full width of its container */
    padding-left: 20px; /* Default padding for unordered lists to show bullets */
}

li {
    list-style: none;
    max-width: 95%;
    font-size: 1.6rem;
    position: relative;
    padding-right: 40px;  /* Adjusted for delete button space */
    line-height: 1.5;
    display: flex;
    align-items: center;   
    padding: 10px;
    border-bottom: 1px solid #e1e1e1;  /* Separator line */
}

li:last-child {
    border-bottom: none;  /* Remove the border for the last item */
}

input[type="checkbox"] {
    margin-top: 9px;
    margin-right: 10px; /* provide some spacing between the checkbox and the text */
}

li span {
    flex: 1; 
    min-width: 0; /* Key change to prevent overflow and ensure wrapping in flexbox */
    margin-right: 60px; 
    overflow-wrap: break-word; /* To ensure the text breaks properly */
}

.delete {
    display: flex;
    align-items: center;
    justify-content: center;
    position: absolute;
    right: 10px;
    top: 50%;  /* Centers the button vertically */
    transform: translateY(-50%);  /* Pulls the button back up */
    width: 23px;
    height: 23px;
    background-color: #999;
    color: white;
    font-weight: bold;
    border: none;
    border-radius: 50%;
    cursor: pointer;
    font-size: 14px;
    padding: 0;
}

/* Hide the default checkbox */
.custom-checkbox {
    display: none;
}

.custom-checkbox + label {
    /* ...existing styles... */
    display: inline-flex; /* Makes it behave better within flex container */
    align-items: center;
    justify-content: center;
}

/* Style for when the checkbox is checked */
.custom-checkbox:checked + label {
    background-color: #333; /* Fill color when checked */
}

/* Create the white tickmark/indicator for checked state using pseudo-element */
.custom-checkbox:checked + label::after {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 12px;
    height: 12px;
    border-radius: 50%;
    background-color: greenyellow;
}

@media only screen and (max-width: 758px) {
    .container {
        max-width: 30rem;
        display: flex;
        justify-content: center;
        align-items: center;
        flex-direction: column;
        flex: 1;
        height:100vh;
        background-color: orange;
    }

    .input {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        gap: 0px;
        font-size: 14px;
    }

    button {
        display: none;
    }

    input[type="text"] {
        width: 100%;
    }
}